{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041e\u0442\u0447\u0435\u0442 \u043f\u043e \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435: \u041a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0410\u0432\u0442\u043e\u0440: \u0415\u0440\u043c\u0430\u043a\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a3340 \u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b \u041e\u0441\u0432\u043e\u0438\u0442\u044c \u043e\u0441\u043d\u043e\u0432\u044b \u0441\u0435\u0442\u0435\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0430 Python, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0432 \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u043e\u0432 (UDP, TCP, HTTP) \u0438 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 (\u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c). \u0417\u0430\u0434\u0430\u043d\u0438\u044f \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f: UDP-\u043a\u043b\u0438\u0435\u043d\u0442 \u0438 \u0441\u0435\u0440\u0432\u0435\u0440 - \u043e\u0431\u043c\u0435\u043d \u043f\u0440\u043e\u0441\u0442\u044b\u043c\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438. TCP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438 - \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041f\u0440\u043e\u0441\u0442\u043e\u0439 HTTP-\u0441\u0435\u0440\u0432\u0435\u0440 - \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430. \u041c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 \u043d\u0430 TCP \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u043e\u0442\u043e\u043a\u043e\u0432 ( threading ). \u0412\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u0443\u0447\u0435\u0442\u0430 \u043e\u0446\u0435\u043d\u043e\u043a \u0441 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 GET \u0438 POST \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.","title":"\u0413\u043b\u0430\u0432\u043d\u0430\u044f"},{"location":"#-","text":"\u0410\u0432\u0442\u043e\u0440: \u0415\u0440\u043c\u0430\u043a\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a3340","title":"\u041e\u0442\u0447\u0435\u0442 \u043f\u043e \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435: \u041a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f"},{"location":"#_1","text":"\u041e\u0441\u0432\u043e\u0438\u0442\u044c \u043e\u0441\u043d\u043e\u0432\u044b \u0441\u0435\u0442\u0435\u0432\u043e\u0433\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0430 Python, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0432 \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u043e\u0432 (UDP, TCP, HTTP) \u0438 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 (\u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c).","title":"\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"#_2","text":"\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f: UDP-\u043a\u043b\u0438\u0435\u043d\u0442 \u0438 \u0441\u0435\u0440\u0432\u0435\u0440 - \u043e\u0431\u043c\u0435\u043d \u043f\u0440\u043e\u0441\u0442\u044b\u043c\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438. TCP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438 - \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041f\u0440\u043e\u0441\u0442\u043e\u0439 HTTP-\u0441\u0435\u0440\u0432\u0435\u0440 - \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430. \u041c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 \u043d\u0430 TCP \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u043e\u0442\u043e\u043a\u043e\u0432 ( threading ). \u0412\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u0443\u0447\u0435\u0442\u0430 \u043e\u0446\u0435\u043d\u043e\u043a \u0441 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 GET \u0438 POST \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u044f"},{"location":"task1/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket . - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP . \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0421\u0435\u0440\u0432\u0435\u0440 import socket # \u041d\u0430 \u043a\u0430\u043a\u043e\u043c \u0430\u0434\u0440\u0435\u0441\u0435 \u0438 \u043f\u043e\u0440\u0442\u0443 \u0441\u043b\u0443\u0448\u0430\u0435\u043c SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 8080 # \u0421\u043e\u0437\u0434\u0430\u0451\u043c UDP-\u0441\u043e\u043a\u0435\u0442: AF_INET (IPv4), SOCK_DGRAM (UDP) server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0430\u0434\u0440\u0435\u0441\u0443/\u043f\u043e\u0440\u0442\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0434\u0430\u0442\u0430\u0433\u0440\u0430\u043c\u043c\u044b server_socket.bind((SERVER_HOST, SERVER_PORT)) print(f\"UDP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {SERVER_HOST}:{SERVER_PORT}\") print(\"\u041e\u0436\u0438\u0434\u0430\u044e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430... (Ctrl+C \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430)\\n\") try: while True: # recvfrom \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 (\u0434\u0430\u043d\u043d\u044b\u0435, \u0430\u0434\u0440\u0435\u0441_\u043a\u043b\u0438\u0435\u043d\u0442\u0430) data, client_addr = server_socket.recvfrom(1024) # \u0434\u043e 1024 \u0431\u0430\u0439\u0442 message = data.decode(\"utf-8\", errors=\"ignore\") print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 {client_addr}: {message}\") # \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u043e\u0442\u0432\u0435\u0442 reply = \"Hello, client\" server_socket.sendto(reply.encode(\"utf-8\"), client_addr) print(f\"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 {client_addr}: {reply}\\n\") except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\") finally: server_socket.close() \u041a\u043b\u0438\u0435\u043d\u0442 import socket SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 9091 # \u0421\u043e\u0437\u0434\u0430\u0451\u043c UDP-\u0441\u043e\u043a\u0435\u0442 client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) try: # \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 msg = \"Hello, server\" client_socket.sendto(msg.encode(\"utf-8\"), (SERVER_HOST, SERVER_PORT)) print(f\"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 {SERVER_HOST}:{SERVER_PORT}: {msg}\") # \u0416\u0434\u0451\u043c \u043e\u0442\u0432\u0435\u0442 data, server_addr = client_socket.recvfrom(1024) reply = data.decode(\"utf-8\", errors=\"ignore\") print(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 {server_addr}: {reply}\") except socket.timeout: print(\"\u041d\u0435 \u0434\u043e\u0436\u0434\u0430\u043b\u0438\u0441\u044c \u043e\u0442\u0432\u0435\u0442\u0430 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (timeout).\") finally: client_socket.close() \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u0421\u043e\u0437\u0434\u0430\u0451\u043c UDP \u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0430\u0434\u0440\u0435\u0441 127.0.0.1 \u0438 \u043f\u043e\u0440\u0442 9090 , \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0446\u0438\u043a\u043b\u0435 \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u0442\u044c \u0438\u0445, \u0430 \u0437\u0430\u0442\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 Hello, client \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041a\u043b\u0438\u0435\u043d\u0442 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 UDP \u0441\u043e\u043a\u0435\u0442 \u0438 \u0431\u0435\u0437 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 127.0.0.1:9090 . \u0417\u0430\u0442\u0435\u043c \u0447\u0438\u0442\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1: UDP \u041a\u043b\u0438\u0435\u043d\u0442-\u0421\u0435\u0440\u0432\u0435\u0440"},{"location":"task1/#1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket . - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP .","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"task1/#_1","text":"","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"task1/#_2","text":"import socket # \u041d\u0430 \u043a\u0430\u043a\u043e\u043c \u0430\u0434\u0440\u0435\u0441\u0435 \u0438 \u043f\u043e\u0440\u0442\u0443 \u0441\u043b\u0443\u0448\u0430\u0435\u043c SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 8080 # \u0421\u043e\u0437\u0434\u0430\u0451\u043c UDP-\u0441\u043e\u043a\u0435\u0442: AF_INET (IPv4), SOCK_DGRAM (UDP) server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0430\u0434\u0440\u0435\u0441\u0443/\u043f\u043e\u0440\u0442\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0434\u0430\u0442\u0430\u0433\u0440\u0430\u043c\u043c\u044b server_socket.bind((SERVER_HOST, SERVER_PORT)) print(f\"UDP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {SERVER_HOST}:{SERVER_PORT}\") print(\"\u041e\u0436\u0438\u0434\u0430\u044e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430... (Ctrl+C \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430)\\n\") try: while True: # recvfrom \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 (\u0434\u0430\u043d\u043d\u044b\u0435, \u0430\u0434\u0440\u0435\u0441_\u043a\u043b\u0438\u0435\u043d\u0442\u0430) data, client_addr = server_socket.recvfrom(1024) # \u0434\u043e 1024 \u0431\u0430\u0439\u0442 message = data.decode(\"utf-8\", errors=\"ignore\") print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 {client_addr}: {message}\") # \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u043e\u0442\u0432\u0435\u0442 reply = \"Hello, client\" server_socket.sendto(reply.encode(\"utf-8\"), client_addr) print(f\"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 {client_addr}: {reply}\\n\") except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\") finally: server_socket.close()","title":"\u0421\u0435\u0440\u0432\u0435\u0440"},{"location":"task1/#_3","text":"import socket SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 9091 # \u0421\u043e\u0437\u0434\u0430\u0451\u043c UDP-\u0441\u043e\u043a\u0435\u0442 client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) try: # \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 msg = \"Hello, server\" client_socket.sendto(msg.encode(\"utf-8\"), (SERVER_HOST, SERVER_PORT)) print(f\"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 {SERVER_HOST}:{SERVER_PORT}: {msg}\") # \u0416\u0434\u0451\u043c \u043e\u0442\u0432\u0435\u0442 data, server_addr = client_socket.recvfrom(1024) reply = data.decode(\"utf-8\", errors=\"ignore\") print(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 {server_addr}: {reply}\") except socket.timeout: print(\"\u041d\u0435 \u0434\u043e\u0436\u0434\u0430\u043b\u0438\u0441\u044c \u043e\u0442\u0432\u0435\u0442\u0430 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (timeout).\") finally: client_socket.close()","title":"\u041a\u043b\u0438\u0435\u043d\u0442"},{"location":"task1/#_4","text":"\u0421\u043e\u0437\u0434\u0430\u0451\u043c UDP \u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0430\u0434\u0440\u0435\u0441 127.0.0.1 \u0438 \u043f\u043e\u0440\u0442 9090 , \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0446\u0438\u043a\u043b\u0435 \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u0442\u044c \u0438\u0445, \u0430 \u0437\u0430\u0442\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 Hello, client \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041a\u043b\u0438\u0435\u043d\u0442 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 UDP \u0441\u043e\u043a\u0435\u0442 \u0438 \u0431\u0435\u0437 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 127.0.0.1:9090 . \u0417\u0430\u0442\u0435\u043c \u0447\u0438\u0442\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442.","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435"},{"location":"task2/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u0432\u0430\u0440\u0438\u0430\u043d\u0442 4 \u2014 \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 ). \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket . - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP . \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0421\u0435\u0440\u0432\u0435\u0440 import socket HOST = \"127.0.0.1\" PORT = 9091 # \u0441\u043e\u0437\u0434\u0430\u0451\u043c TCP-\u0441\u043e\u043a\u0435\u0442 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 server_socket.bind((HOST, PORT)) # \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u0441\u043b\u0443\u0448\u0430\u0442\u044c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f server_socket.listen(1) print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {HOST}:{PORT}\") print(\"\u0416\u0434\u0443 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430... \\n\") try: while True: # \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u043e\u0434\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 conn, addr = server_socket.accept() print(f\"\u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f: {addr}\") # \u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u0434\u0432\u0443\u043c\u044f \u0447\u0438\u0441\u043b\u0430\u043c\u0438: \"<a> <h>\" data = conn.recv(1024) text = data.decode(\"utf-8\").strip() print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e: {text!r}\") # \u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0440\u0430\u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 try: a_str, h_str = text.split() # \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u043c \u0432\u0432\u043e\u0434 \u0441 \u0437\u0430\u043f\u044f\u0442\u043e\u0439 a = float(a_str.replace(\",\", \".\")) h = float(h_str.replace(\",\", \".\")) area = a * h reply = f\"{area:.6f}\" # \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0441\u043b\u043e except Exception: reply = \"\u041e\u0448\u0438\u0431\u043a\u0430: \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: 7.5 3\" # \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 conn.sendall(reply.encode(\"utf-8\")) print(f\"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e: {reply}\\n\") conn.close() except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d.\") finally: server_socket.close() \u041a\u043b\u0438\u0435\u043d\u0442 import socket SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 9091 # \u041f\u0440\u043e\u0441\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432\u0432\u0435\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b print(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430\") a = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 a: \").strip() h = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u044b\u0441\u043e\u0442\u0443 h: \").strip() # \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 request = f\"{a} {h}\" # \u0421\u043e\u0437\u0434\u0430\u0451\u043c TCP-\u0441\u043e\u043a\u0435\u0442, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: client_socket.connect((SERVER_HOST, SERVER_PORT)) client_socket.sendall(request.encode(\"utf-8\")) # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 data = client_socket.recv(1024) reply = data.decode(\"utf-8\").strip() print(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {reply}\") except ConnectionRefusedError: print(\"\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443.\") finally: client_socket.close() \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u041a\u043b\u0438\u0435\u043d\u0442 \u0432\u0432\u043e\u0434\u0438\u0442 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0432\u044b\u0441\u043e\u0442\u0443 , \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0445 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 <a> <h> . \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0430\u0440\u0441\u0438\u0442 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430, \u0441\u0447\u0438\u0442\u0430\u0435\u0442 S = a * h \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0439. TCP \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043d\u0430\u0434\u0451\u0436\u043d\u0443\u044e \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0443 \u0438 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2: TCP: \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430"},{"location":"task2/#2","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u0432\u0430\u0440\u0438\u0430\u043d\u0442 4 \u2014 \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430 ). \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket . - \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP .","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"task2/#_1","text":"","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"task2/#_2","text":"import socket HOST = \"127.0.0.1\" PORT = 9091 # \u0441\u043e\u0437\u0434\u0430\u0451\u043c TCP-\u0441\u043e\u043a\u0435\u0442 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 server_socket.bind((HOST, PORT)) # \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u0441\u043b\u0443\u0448\u0430\u0442\u044c \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f server_socket.listen(1) print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {HOST}:{PORT}\") print(\"\u0416\u0434\u0443 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430... \\n\") try: while True: # \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u043e\u0434\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 conn, addr = server_socket.accept() print(f\"\u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f: {addr}\") # \u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0443 \u0441 \u0434\u0432\u0443\u043c\u044f \u0447\u0438\u0441\u043b\u0430\u043c\u0438: \"<a> <h>\" data = conn.recv(1024) text = data.decode(\"utf-8\").strip() print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e: {text!r}\") # \u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0440\u0430\u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 try: a_str, h_str = text.split() # \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u043c \u0432\u0432\u043e\u0434 \u0441 \u0437\u0430\u043f\u044f\u0442\u043e\u0439 a = float(a_str.replace(\",\", \".\")) h = float(h_str.replace(\",\", \".\")) area = a * h reply = f\"{area:.6f}\" # \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0441\u043b\u043e except Exception: reply = \"\u041e\u0448\u0438\u0431\u043a\u0430: \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: 7.5 3\" # \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 conn.sendall(reply.encode(\"utf-8\")) print(f\"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e: {reply}\\n\") conn.close() except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d.\") finally: server_socket.close()","title":"\u0421\u0435\u0440\u0432\u0435\u0440"},{"location":"task2/#_3","text":"import socket SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 9091 # \u041f\u0440\u043e\u0441\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432\u0432\u0435\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b print(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430\") a = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 a: \").strip() h = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u044b\u0441\u043e\u0442\u0443 h: \").strip() # \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 request = f\"{a} {h}\" # \u0421\u043e\u0437\u0434\u0430\u0451\u043c TCP-\u0441\u043e\u043a\u0435\u0442, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: client_socket.connect((SERVER_HOST, SERVER_PORT)) client_socket.sendall(request.encode(\"utf-8\")) # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 data = client_socket.recv(1024) reply = data.decode(\"utf-8\").strip() print(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {reply}\") except ConnectionRefusedError: print(\"\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443.\") finally: client_socket.close()","title":"\u041a\u043b\u0438\u0435\u043d\u0442"},{"location":"task2/#_4","text":"\u041a\u043b\u0438\u0435\u043d\u0442 \u0432\u0432\u043e\u0434\u0438\u0442 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0432\u044b\u0441\u043e\u0442\u0443 , \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0445 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 <a> <h> . \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0430\u0440\u0441\u0438\u0442 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430, \u0441\u0447\u0438\u0442\u0430\u0435\u0442 S = a * h \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u043e\u0439. TCP \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043d\u0430\u0434\u0451\u0436\u043d\u0443\u044e \u0434\u043e\u0441\u0442\u0430\u0432\u043a\u0443 \u0438 \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439.","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435"},{"location":"task3/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 , \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML\u2011\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html . \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket . \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0421\u0435\u0440\u0432\u0435\u0440 import socket from datetime import datetime def load_html_file(file_name): \"\"\"\u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 HTML-\u0444\u0430\u0439\u043b\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 (\u0442\u0435\u043a\u0441\u0442, \u043d\u0430\u0439\u0434\u0435\u043d_\u043b\u0438_\u0444\u0430\u0439\u043b: bool).\"\"\" try: with open(file_name, \"r\", encoding=\"utf-8\") as file: return file.read(), True except FileNotFoundError: not_found_html = \"<!doctype html><meta charset='utf-8'><h1>404 - File Not Found</h1>\" return not_found_html, False def build_http_response(status_code, body_text): \"\"\"\u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0435 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 + \u0442\u0435\u043b\u043e).\"\"\" if status_code == 200: status_line = \"HTTP/1.1 200 OK\" elif status_code == 404: status_line = \"HTTP/1.1 404 Not Found\" else: status_line = f\"HTTP/1.1 {status_code}\" body_bytes = body_text.encode(\"utf-8\") headers = [ status_line, \"Content-Type: text/html; charset=utf-8\", f\"Content-Length: {len(body_bytes)}\", # \u0434\u043b\u0438\u043d\u0430 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445! \"Connection: close\", f\"Date: {datetime.utcnow():%a, %d %b %Y %H:%M:%S} GMT\", ] # \u041c\u0435\u0436\u0434\u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438 \u0438 \u0442\u0435\u043b\u043e\u043c \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 (\\r\\n\\r\\n) response_text = \"\\r\\n\".join(headers) + \"\\r\\n\\r\\n\" return response_text.encode(\"utf-8\") + body_bytes def main(): server_host = \"127.0.0.1\" server_port = 8081 html_file_name = \"index.html\" # \u0421\u043e\u0437\u0434\u0430\u0435\u043c TCP-\u0441\u043e\u043a\u0435\u0442 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u0427\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430 \u0442\u043e\u043c \u0436\u0435 \u043f\u043e\u0440\u0442\u0443 server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) server_socket.bind((server_host, server_port)) # \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 server_socket.listen(5) print(f\"HTTP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 http://{server_host}:{server_port}\") try: while True: try: # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 client_socket, client_address = server_socket.accept() print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442: {client_address}\") # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c HTTP-\u0437\u0430\u043f\u0440\u043e\u0441 raw_request = client_socket.recv(2048).decode(\"utf-8\", errors=\"ignore\") print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d \u0437\u0430\u043f\u0440\u043e\u0441:\\n{raw_request}\") # \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 html_content, file_found = load_html_file(html_file_name) # \u0413\u043e\u0442\u043e\u0432\u0438\u043c \u043e\u0442\u0432\u0435\u0442 \u0441 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u043c \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c status_code = 200 if file_found else 404 http_response = build_http_response(status_code, html_content) # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 client_socket.sendall(http_response) print(f\"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d HTTP-\u043e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c {status_code}\\n\") except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\") break except Exception as error: print(f\"\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430: {error}\") finally: try: client_socket.close() except Exception: pass finally: server_socket.close() if __name__ == \"__main__\": main() \u041f\u0440\u0438\u043c\u0435\u0440 index.html <!DOCTYPE html> <html lang=\"ru\"> <head> <meta charset=\"UTF-8\" /> <title>\u041c\u043e\u0439 index.html</title> <style> body { font-family: sans-serif; margin: 2rem; } </style> </head> <body> <h1>\u041f\u0440\u0438\u0432\u0435\u0442! \u042d\u0442\u043e html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0415\u0440\u043c\u0430\u043a\u043e\u0432\u0430 \u041c\u0430\u043a\u0441\u0438\u043c\u0430!</h1> <p>\u042d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0434\u0430\u0451\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430 \u0441\u043e\u043a\u0435\u0442\u0430\u0445.</p> </body> </html> \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u0421\u043e\u0437\u0434\u0430\u0451\u043c TCP \u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0430\u0434\u0440\u0435\u0441 127.0.0.1 \u0438 \u043f\u043e\u0440\u0442 9090 \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c. - \u0421\u0435\u0440\u0432\u0435\u0440 \u0447\u0438\u0442\u0430\u0435\u0442 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0439 HTTP\u2011\u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u043e\u0442\u0434\u0430\u0451\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 index.html . - \u0412 \u043e\u0442\u0432\u0435\u0442\u0435 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438: \u0441\u0442\u0430\u0442\u0443\u0441, Content-Type , Content-Length , Connection , Date , \u0437\u0430\u0442\u0435\u043c \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0438 HTML\u2011\u0442\u0435\u043b\u043e. - \u0415\u0441\u043b\u0438 \u0444\u0430\u0439\u043b\u0430 \u043d\u0435\u0442 \u2014 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 404 . \u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 HTTP GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432 \u043e\u0442\u0432\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 index.html.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3: HTTP \u0421\u0435\u0440\u0432\u0435\u0440"},{"location":"task3/#3","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 , \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML\u2011\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html . \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket .","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"task3/#_1","text":"","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"task3/#_2","text":"import socket from datetime import datetime def load_html_file(file_name): \"\"\"\u0427\u0438\u0442\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 HTML-\u0444\u0430\u0439\u043b\u0430 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 (\u0442\u0435\u043a\u0441\u0442, \u043d\u0430\u0439\u0434\u0435\u043d_\u043b\u0438_\u0444\u0430\u0439\u043b: bool).\"\"\" try: with open(file_name, \"r\", encoding=\"utf-8\") as file: return file.read(), True except FileNotFoundError: not_found_html = \"<!doctype html><meta charset='utf-8'><h1>404 - File Not Found</h1>\" return not_found_html, False def build_http_response(status_code, body_text): \"\"\"\u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0435 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 + \u0442\u0435\u043b\u043e).\"\"\" if status_code == 200: status_line = \"HTTP/1.1 200 OK\" elif status_code == 404: status_line = \"HTTP/1.1 404 Not Found\" else: status_line = f\"HTTP/1.1 {status_code}\" body_bytes = body_text.encode(\"utf-8\") headers = [ status_line, \"Content-Type: text/html; charset=utf-8\", f\"Content-Length: {len(body_bytes)}\", # \u0434\u043b\u0438\u043d\u0430 \u0432 \u0431\u0430\u0439\u0442\u0430\u0445! \"Connection: close\", f\"Date: {datetime.utcnow():%a, %d %b %Y %H:%M:%S} GMT\", ] # \u041c\u0435\u0436\u0434\u0443 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\u043c\u0438 \u0438 \u0442\u0435\u043b\u043e\u043c \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 (\\r\\n\\r\\n) response_text = \"\\r\\n\".join(headers) + \"\\r\\n\\r\\n\" return response_text.encode(\"utf-8\") + body_bytes def main(): server_host = \"127.0.0.1\" server_port = 8081 html_file_name = \"index.html\" # \u0421\u043e\u0437\u0434\u0430\u0435\u043c TCP-\u0441\u043e\u043a\u0435\u0442 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u0427\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430 \u0442\u043e\u043c \u0436\u0435 \u043f\u043e\u0440\u0442\u0443 server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) server_socket.bind((server_host, server_port)) # \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 server_socket.listen(5) print(f\"HTTP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 http://{server_host}:{server_port}\") try: while True: try: # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 client_socket, client_address = server_socket.accept() print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442: {client_address}\") # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c HTTP-\u0437\u0430\u043f\u0440\u043e\u0441 raw_request = client_socket.recv(2048).decode(\"utf-8\", errors=\"ignore\") print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d \u0437\u0430\u043f\u0440\u043e\u0441:\\n{raw_request}\") # \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 html_content, file_found = load_html_file(html_file_name) # \u0413\u043e\u0442\u043e\u0432\u0438\u043c \u043e\u0442\u0432\u0435\u0442 \u0441 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u043c \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c status_code = 200 if file_found else 404 http_response = build_http_response(status_code, html_content) # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 client_socket.sendall(http_response) print(f\"\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d HTTP-\u043e\u0442\u0432\u0435\u0442 \u0441\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c {status_code}\\n\") except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\") break except Exception as error: print(f\"\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430: {error}\") finally: try: client_socket.close() except Exception: pass finally: server_socket.close() if __name__ == \"__main__\": main()","title":"\u0421\u0435\u0440\u0432\u0435\u0440"},{"location":"task3/#indexhtml","text":"<!DOCTYPE html> <html lang=\"ru\"> <head> <meta charset=\"UTF-8\" /> <title>\u041c\u043e\u0439 index.html</title> <style> body { font-family: sans-serif; margin: 2rem; } </style> </head> <body> <h1>\u041f\u0440\u0438\u0432\u0435\u0442! \u042d\u0442\u043e html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0415\u0440\u043c\u0430\u043a\u043e\u0432\u0430 \u041c\u0430\u043a\u0441\u0438\u043c\u0430!</h1> <p>\u042d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0442\u0434\u0430\u0451\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430 \u0441\u043e\u043a\u0435\u0442\u0430\u0445.</p> </body> </html>","title":"\u041f\u0440\u0438\u043c\u0435\u0440 index.html"},{"location":"task3/#_3","text":"\u0421\u043e\u0437\u0434\u0430\u0451\u043c TCP \u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0430\u0434\u0440\u0435\u0441 127.0.0.1 \u0438 \u043f\u043e\u0440\u0442 9090 \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c. - \u0421\u0435\u0440\u0432\u0435\u0440 \u0447\u0438\u0442\u0430\u0435\u0442 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0439 HTTP\u2011\u0437\u0430\u043f\u0440\u043e\u0441 \u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u043e\u0442\u0434\u0430\u0451\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 index.html . - \u0412 \u043e\u0442\u0432\u0435\u0442\u0435 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438: \u0441\u0442\u0430\u0442\u0443\u0441, Content-Type , Content-Length , Connection , Date , \u0437\u0430\u0442\u0435\u043c \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0438 HTML\u2011\u0442\u0435\u043b\u043e. - \u0415\u0441\u043b\u0438 \u0444\u0430\u0439\u043b\u0430 \u043d\u0435\u0442 \u2014 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 404 . \u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 HTTP GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432 \u043e\u0442\u0432\u0435\u0442 HTTP-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 index.html.","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435"},{"location":"task4/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 . \u0417\u0430\u043f\u0443\u0441\u043a \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 client.py \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket . - \u0414\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c threading . - \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP . \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0421\u0435\u0440\u0432\u0435\u0440 import socket import threading SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 9092 connected_clients = [] connected_clients_lock = threading.Lock() def broadcast_message(text_message): with connected_clients_lock: for client in connected_clients: try: client[\"socket\"].sendall((text_message + \"\\n\").encode(\"utf-8\")) except Exception: pass def handle_client_connection(client_socket, client_address): client_file = client_socket.makefile(\"r\", encoding=\"utf-8\", newline=\"\\n\") try: user_name = client_file.readline() if not user_name: client_socket.close() return user_name = user_name.strip() with connected_clients_lock: connected_clients.append({\"socket\": client_socket, \"file\": client_file, \"name\": user_name}) print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c: {user_name} {client_address}\") broadcast_message(f\"[\u0421\u0418\u0421\u0422\u0415\u041c\u0410] \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {user_name} \u0432\u043e\u0448\u0451\u043b \u0432 \u0447\u0430\u0442.\") while True: line = client_file.readline() if not line: break text_message = line.rstrip(\"\\n\") if text_message.strip() == \"\": continue broadcast_message(f\"{user_name}: {text_message}\") finally: with connected_clients_lock: for c in list(connected_clients): if c[\"socket\"] is client_socket: connected_clients.remove(c) break try: client_file.close() except Exception: pass try: client_socket.close() except Exception: pass broadcast_message(f\"[\u0421\u0418\u0421\u0422\u0415\u041c\u0410] \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {user_name} \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442.\") def main(): server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) server_socket.bind((SERVER_HOST, SERVER_PORT)) server_socket.listen(10) print(f\"\u0427\u0430\u0442-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {SERVER_HOST}:{SERVER_PORT}\") try: while True: client_socket, client_address = server_socket.accept() t = threading.Thread(target=handle_client_connection, args=(client_socket, client_address), daemon=True) t.start() except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\") finally: server_socket.close() if __name__ == \"__main__\": main() \u041a\u043b\u0438\u0435\u043d\u0442 import socket import threading SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 9092 def receive_messages_loop(client_socket): client_file = client_socket.makefile(\"r\", encoding=\"utf-8\", newline=\"\\n\") try: for line in client_file: print(line.rstrip(\"\\n\")) finally: try: client_file.close() except Exception: pass def main(): print(\"\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430 \u0432\u0432\u0435\u0434\u0438\u0442\u0435 /quit\") user_name = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0438\u043c\u044f: \").strip() if not user_name: print(\"\u0418\u043c\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c.\") return sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: sock.connect((SERVER_HOST, SERVER_PORT)) except ConnectionRefusedError: print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d.\") return sock.sendall((user_name + \"\\n\").encode(\"utf-8\")) t = threading.Thread(target=receive_messages_loop, args=(sock,), daemon=True) t.start() try: while True: text = input() if text.strip().lower() == \"/quit\": break try: sock.sendall((text + \"\\n\").encode(\"utf-8\")) except Exception: print(\"\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0442\u0435\u0440\u044f\u043d\u043e.\") break finally: try: sock.close() except Exception: pass print(\"\u0412\u044b \u0432\u044b\u0448\u043b\u0438 \u0438\u0437 \u0447\u0430\u0442\u0430.\") if __name__ == \"__main__\": main() \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 1) \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u0421\u043e\u0437\u0434\u0430\u0451\u0442 TCP-\u0441\u043e\u043a\u0435\u0442 ( AF_INET + SOCK_STREAM ), \u0432\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0430\u0434\u0440\u0435\u0441 127.0.0.1:9092 , \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u044c ( listen(10) ). \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0434\u0435\u043b\u0430\u0435\u0442 accept() \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0442\u043e\u043a handle_client_connection . \u041f\u043e\u0442\u043e\u043a: \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u2014 \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u043e\u0431\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a connected_clients \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 Lock . \u0412 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0446\u0438\u043a\u043b\u0435 \u0447\u0438\u0442\u0430\u0435\u0442 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 = \u043e\u0434\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 ( readline() ), \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 broadcast_message , \u0447\u0442\u043e\u0431\u044b \u0440\u0430\u0437\u043e\u0441\u043b\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u0441\u0435\u043c. \u041f\u0440\u0438 \u0440\u0430\u0437\u0440\u044b\u0432\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u0443\u0445\u043e\u0434\u0435. \u041f\u043e\u0447\u0435\u043c\u0443 \u0442\u0430\u043a: - TCP \u0434\u0430\u0451\u0442 \u043d\u0430\u043c \u043d\u0430\u0434\u0451\u0436\u043d\u043e\u0441\u0442\u044c \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0440\u044f\u0434\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0438\u0440\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u043e\u0431\u043c\u0435\u043d. - threading \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e: \u0435\u0441\u043b\u0438 \u043e\u0434\u0438\u043d \u0437\u0430\u0432\u0438\u0441 \u2014 \u0434\u0440\u0443\u0433\u0438\u0435 \u043d\u0435 \u0441\u0442\u0440\u0430\u0434\u0430\u044e\u0442. 2) \u041a\u0430\u043a \u0443\u0441\u0442\u0440\u043e\u0435\u043d \u00ab\u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u00bb \u0447\u0430\u0442\u0430 \u043a\u0430\u0436\u0434\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u2014 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 , \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \\n . \u0412 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0412\u0441\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u043c\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438. \u041d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c makefile(...).readline() \u2014 \u044d\u0442\u043e \u0443\u0434\u043e\u0431\u043d\u043e \u0438 \u043f\u0440\u043e\u0441\u0442\u043e. 3) \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u0435\u043d Lock \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u2014 \u043e\u0431\u0449\u0438\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432; \u0435\u0433\u043e \u043c\u043e\u0433\u0443\u0442 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0447\u0438\u0442\u0430\u0442\u044c/\u043c\u0435\u043d\u044f\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438. \u0411\u0435\u0437 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b \u00ab\u0433\u043e\u043d\u043a\u0438\u00bb \u0438 \u043f\u0430\u0434\u0435\u043d\u0438\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0434\u0438\u043d \u043f\u043e\u0442\u043e\u043a \u0438\u0442\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u043e \u0441\u043f\u0438\u0441\u043a\u0443, \u0434\u0440\u0443\u0433\u043e\u0439 \u0432 \u044d\u0442\u043e\u0442 \u043c\u043e\u043c\u0435\u043d\u0442 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442). \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043b\u044e\u0431\u043e\u0439 \u0434\u043e\u0441\u0442\u0443\u043f \u043d\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0432\u043d\u0443\u0442\u0440\u0438 with connected_clients_lock: . 4) \u041a\u043b\u0438\u0435\u043d\u0442: \u043f\u043e\u0447\u0435\u043c\u0443 \u0434\u0432\u0430 \u043f\u043e\u0442\u043e\u043a\u0430 \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043f\u043e\u0442\u043e\u043a \u0447\u0438\u0442\u0430\u0435\u0442 \u0432\u0432\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f ( input() ) \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440. \u041e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u043e\u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u0442 \u0438\u0445. \u0411\u0435\u0437 \u043d\u0435\u0433\u043e \u0432\u044b \u0431\u044b \u043d\u0435 \u0432\u0438\u0434\u0435\u043b\u0438 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u043f\u043e\u043a\u0430 \u0436\u0434\u0451\u0442\u0435 input() .","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4: TCP \u0427\u0430\u0442"},{"location":"task4/#4","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442 . \u0417\u0430\u043f\u0443\u0441\u043a \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 client.py \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket . - \u0414\u043b\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0442\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c threading . - \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b TCP .","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4"},{"location":"task4/#_1","text":"","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"task4/#_2","text":"import socket import threading SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 9092 connected_clients = [] connected_clients_lock = threading.Lock() def broadcast_message(text_message): with connected_clients_lock: for client in connected_clients: try: client[\"socket\"].sendall((text_message + \"\\n\").encode(\"utf-8\")) except Exception: pass def handle_client_connection(client_socket, client_address): client_file = client_socket.makefile(\"r\", encoding=\"utf-8\", newline=\"\\n\") try: user_name = client_file.readline() if not user_name: client_socket.close() return user_name = user_name.strip() with connected_clients_lock: connected_clients.append({\"socket\": client_socket, \"file\": client_file, \"name\": user_name}) print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c: {user_name} {client_address}\") broadcast_message(f\"[\u0421\u0418\u0421\u0422\u0415\u041c\u0410] \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {user_name} \u0432\u043e\u0448\u0451\u043b \u0432 \u0447\u0430\u0442.\") while True: line = client_file.readline() if not line: break text_message = line.rstrip(\"\\n\") if text_message.strip() == \"\": continue broadcast_message(f\"{user_name}: {text_message}\") finally: with connected_clients_lock: for c in list(connected_clients): if c[\"socket\"] is client_socket: connected_clients.remove(c) break try: client_file.close() except Exception: pass try: client_socket.close() except Exception: pass broadcast_message(f\"[\u0421\u0418\u0421\u0422\u0415\u041c\u0410] \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c {user_name} \u043f\u043e\u043a\u0438\u043d\u0443\u043b \u0447\u0430\u0442.\") def main(): server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) server_socket.bind((SERVER_HOST, SERVER_PORT)) server_socket.listen(10) print(f\"\u0427\u0430\u0442-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {SERVER_HOST}:{SERVER_PORT}\") try: while True: client_socket, client_address = server_socket.accept() t = threading.Thread(target=handle_client_connection, args=(client_socket, client_address), daemon=True) t.start() except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\") finally: server_socket.close() if __name__ == \"__main__\": main()","title":"\u0421\u0435\u0440\u0432\u0435\u0440"},{"location":"task4/#_3","text":"import socket import threading SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 9092 def receive_messages_loop(client_socket): client_file = client_socket.makefile(\"r\", encoding=\"utf-8\", newline=\"\\n\") try: for line in client_file: print(line.rstrip(\"\\n\")) finally: try: client_file.close() except Exception: pass def main(): print(\"\u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u0447\u0430\u0442. \u0414\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430 \u0432\u0432\u0435\u0434\u0438\u0442\u0435 /quit\") user_name = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0438\u043c\u044f: \").strip() if not user_name: print(\"\u0418\u043c\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c.\") return sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) try: sock.connect((SERVER_HOST, SERVER_PORT)) except ConnectionRefusedError: print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d.\") return sock.sendall((user_name + \"\\n\").encode(\"utf-8\")) t = threading.Thread(target=receive_messages_loop, args=(sock,), daemon=True) t.start() try: while True: text = input() if text.strip().lower() == \"/quit\": break try: sock.sendall((text + \"\\n\").encode(\"utf-8\")) except Exception: print(\"\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0442\u0435\u0440\u044f\u043d\u043e.\") break finally: try: sock.close() except Exception: pass print(\"\u0412\u044b \u0432\u044b\u0448\u043b\u0438 \u0438\u0437 \u0447\u0430\u0442\u0430.\") if __name__ == \"__main__\": main()","title":"\u041a\u043b\u0438\u0435\u043d\u0442"},{"location":"task4/#_4","text":"","title":"\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435"},{"location":"task4/#1","text":"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 TCP-\u0441\u043e\u043a\u0435\u0442 ( AF_INET + SOCK_STREAM ), \u0432\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0430\u0434\u0440\u0435\u0441 127.0.0.1:9092 , \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u044c ( listen(10) ). \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0434\u0435\u043b\u0430\u0435\u0442 accept() \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0442\u043e\u043a handle_client_connection . \u041f\u043e\u0442\u043e\u043a: \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u2014 \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u043e\u0431\u0449\u0438\u0439 \u0441\u043f\u0438\u0441\u043e\u043a connected_clients \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 Lock . \u0412 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0446\u0438\u043a\u043b\u0435 \u0447\u0438\u0442\u0430\u0435\u0442 \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 = \u043e\u0434\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 ( readline() ), \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 broadcast_message , \u0447\u0442\u043e\u0431\u044b \u0440\u0430\u0437\u043e\u0441\u043b\u0430\u0442\u044c \u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u0441\u0435\u043c. \u041f\u0440\u0438 \u0440\u0430\u0437\u0440\u044b\u0432\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u0443\u0445\u043e\u0434\u0435. \u041f\u043e\u0447\u0435\u043c\u0443 \u0442\u0430\u043a: - TCP \u0434\u0430\u0451\u0442 \u043d\u0430\u043c \u043d\u0430\u0434\u0451\u0436\u043d\u043e\u0441\u0442\u044c \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u0440\u044f\u0434\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0438\u0440\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0439 \u043e\u0431\u043c\u0435\u043d. - threading \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e: \u0435\u0441\u043b\u0438 \u043e\u0434\u0438\u043d \u0437\u0430\u0432\u0438\u0441 \u2014 \u0434\u0440\u0443\u0433\u0438\u0435 \u043d\u0435 \u0441\u0442\u0440\u0430\u0434\u0430\u044e\u0442.","title":"1) \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440"},{"location":"task4/#2","text":"\u043a\u0430\u0436\u0434\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u2014 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 , \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \\n . \u0412 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u043e\u0439 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0412\u0441\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u043c\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438. \u041d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c makefile(...).readline() \u2014 \u044d\u0442\u043e \u0443\u0434\u043e\u0431\u043d\u043e \u0438 \u043f\u0440\u043e\u0441\u0442\u043e.","title":"2) \u041a\u0430\u043a \u0443\u0441\u0442\u0440\u043e\u0435\u043d \u00ab\u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u00bb \u0447\u0430\u0442\u0430"},{"location":"task4/#3-lock","text":"\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u2014 \u043e\u0431\u0449\u0438\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432; \u0435\u0433\u043e \u043c\u043e\u0433\u0443\u0442 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0447\u0438\u0442\u0430\u0442\u044c/\u043c\u0435\u043d\u044f\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438. \u0411\u0435\u0437 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b \u00ab\u0433\u043e\u043d\u043a\u0438\u00bb \u0438 \u043f\u0430\u0434\u0435\u043d\u0438\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0434\u0438\u043d \u043f\u043e\u0442\u043e\u043a \u0438\u0442\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u043e \u0441\u043f\u0438\u0441\u043a\u0443, \u0434\u0440\u0443\u0433\u043e\u0439 \u0432 \u044d\u0442\u043e\u0442 \u043c\u043e\u043c\u0435\u043d\u0442 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442). \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043b\u044e\u0431\u043e\u0439 \u0434\u043e\u0441\u0442\u0443\u043f \u043d\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0432\u043d\u0443\u0442\u0440\u0438 with connected_clients_lock: .","title":"3) \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u0435\u043d Lock"},{"location":"task4/#4_1","text":"\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043f\u043e\u0442\u043e\u043a \u0447\u0438\u0442\u0430\u0435\u0442 \u0432\u0432\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f ( input() ) \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440. \u041e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u043e\u043d\u043e\u0432\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u0442 \u0438\u0445. \u0411\u0435\u0437 \u043d\u0435\u0433\u043e \u0432\u044b \u0431\u044b \u043d\u0435 \u0432\u0438\u0434\u0435\u043b\u0438 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u043f\u043e\u043a\u0430 \u0436\u0434\u0451\u0442\u0435 input() .","title":"4) \u041a\u043b\u0438\u0435\u043d\u0442: \u043f\u043e\u0447\u0435\u043c\u0443 \u0434\u0432\u0430 \u043f\u043e\u0442\u043e\u043a\u0430"},{"location":"task5/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5 \u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e socket \u0432 Python. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d: - \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 (\u0432 \u043f\u0430\u043c\u044f\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430). - \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b (\u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0430 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u043e\u0446\u0435\u043d\u043e\u043a). - \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: TCP (HTTP \u043f\u043e\u0432\u0435\u0440\u0445 TCP). \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0421\u0435\u0440\u0432\u0435\u0440 import socket from urllib.parse import parse_qs SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 8083 # \u041f\u0430\u043c\u044f\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u0430: \"\u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\" -> \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u043e\u043a grades_by_discipline = {} # \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: {\"\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430\": [\"5\", \"4\"]} def build_html_page(): table_rows = [] if grades_by_discipline: for discipline, grades_list in grades_by_discipline.items(): grades_text = \", \".join(grades_list) if grades_list else \"\u2014\" table_rows.append(f\"<tr><td>{discipline}</td><td>{grades_text}</td></tr>\") else: table_rows.append(\"<tr><td colspan='2'>\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445</td></tr>\") html = \"\"\"<!DOCTYPE html> <html lang=\"ru\"> <meta charset=\"UTF-8\"> <title>\u0416\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a</title> <h1>\u0416\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a</h1> <form action=\"/add\" method=\"POST\"> <div> <label>\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430: <input type=\"text\" name=\"discipline\"></label> </div> <div> <label>\u041e\u0446\u0435\u043d\u043a\u0430: <input type=\"text\" name=\"grade\"></label> </div> <div> <button type=\"submit\">\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c</button> </div> </form> <table border=\"1\" cellpadding=\"6\" cellspacing=\"0\"> <thead> <tr><th>\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430</th><th>\u041e\u0446\u0435\u043d\u043a\u0438</th></tr> </thead> <tbody> {rows} </tbody> </table> \"\"\".format(rows=''.join(table_rows)) return html def read_http_request(client_socket): data = b\"\" while b\"\\r\\n\\r\\n\" not in data: chunk = client_socket.recv(4096) if not chunk: break data += chunk header_part, _, body_rest = data.partition(b\"\\r\\n\\r\\n\") header_text = header_part.decode(\"iso-8859-1\", errors=\"ignore\") lines = header_text.split(\"\\r\\n\") request_line = lines[0] if lines else \"\" try: method, path, version = request_line.split(\" \") except ValueError: method, path, version = \"\", \"\", \"\" headers = {} for line in lines[1:]: if \":\" in line: k, v = line.split(\":\", 1) headers[k.strip().lower()] = v.strip() content_length = int(headers.get(\"content-length\", \"0\") or \"0\") body = body_rest while len(body) < content_length: chunk = client_socket.recv(4096) if not chunk: break body += chunk return method, path, version, headers, body def build_http_response(status_code, body_text, content_type=\"text/html; charset=UTF-8\"): if status_code == 200: status_line = \"HTTP/1.1 200 OK\" elif status_code == 404: status_line = \"HTTP/1.1 404 Not Found\" else: status_line = f\"HTTP/1.1 {status_code}\" body_bytes = body_text.encode(\"utf-8\") headers_lines = [ status_line, f\"Content-Type: {content_type}\", f\"Content-Length: {len(body_bytes)}\", \"Connection: close\", ] return (\"\\r\\n\".join(headers_lines) + \"\\r\\n\\r\\n\").encode(\"utf-8\") + body_bytes def handle_client(client_socket): try: method, path, version, headers, body = read_http_request(client_socket) if method == \"GET\" and path.startswith(\"/\"): page = build_html_page() client_socket.sendall(build_http_response(200, page)) return if method == \"POST\" and path == \"/add\": form_text = body.decode(\"utf-8\", errors=\"ignore\") form_data = parse_qs(form_text) discipline = (form_data.get(\"discipline\", [\"\"])[0] or \"\").strip() grade = (form_data.get(\"grade\", [\"\"])[0] or \"\").strip() if discipline and grade: grades_by_discipline.setdefault(discipline, []).append(grade) page = build_html_page() client_socket.sendall(build_http_response(200, page)) return not_found = \"<!doctype html><meta charset='utf-8'><h1>404 Not Found</h1>\" client_socket.sendall(build_http_response(404, not_found)) finally: try: client_socket.close() except Exception: pass def main(): server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) server_socket.bind((SERVER_HOST, SERVER_PORT)) server_socket.listen(5) print(f\"\u0416\u0443\u0440\u043d\u0430\u043b-HTTP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 http://{SERVER_HOST}:{SERVER_PORT}\") try: while True: client_socket, client_address = server_socket.accept() handle_client(client_socket) except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\") finally: server_socket.close() if __name__ == \"__main__\": main() \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 1) \u041e\u0431\u0449\u0430\u044f \u0438\u0434\u0435\u044f \u041c\u044b \u043f\u0438\u0448\u0435\u043c \u043c\u0438\u043a\u0440\u043e-HTTP-\u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430 \u0447\u0438\u0441\u0442\u044b\u0445 \u0441\u043e\u043a\u0435\u0442\u0430\u0445: \u0447\u0438\u0442\u0430\u0435\u043c \u0442\u0435\u043a\u0441\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043f\u0430\u0440\u0441\u0438\u043c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443, \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438, \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0442\u0435\u043b\u043e. \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c \u0434\u0432\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430 : GET / \u2014 \u043e\u0442\u0434\u0430\u0442\u044c HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 \u043e\u0446\u0435\u043d\u043e\u043a. POST /add \u2014 \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u043f\u043e\u043b\u044f discipline \u0438 grade , \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u0445 \u0432 \u043f\u0430\u043c\u044f\u0442\u044c, \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043e\u0431\u043d\u043e\u0432\u043b\u0451\u043d\u043d\u0443\u044e HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. 2) \u041a\u0430\u043a \u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f HTTP-\u0437\u0430\u043f\u0440\u043e\u0441 TCP \u2014 \u043f\u043e\u0442\u043e\u043a \u0431\u0430\u0439\u0442. \u041c\u044b \u0447\u0438\u0442\u0430\u0435\u043c \u0438\u0437 \u0441\u043e\u043a\u0435\u0442\u0430 \u043f\u043e\u0440\u0446\u0438\u044f\u043c\u0438, \u043f\u043e\u043a\u0430 \u043d\u0435 \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u043c \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0438 \u0442\u0435\u043b\u0430 : \\r\\n\\r\\n . \u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 (Request-Line) \u0432\u0438\u0434\u0430: GET / HTTP/1.1 \u2192 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u043c \u043d\u0430 method , path , version . \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u043a\u043b\u0430\u0434\u0451\u043c \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c headers \u0441 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u0432 \u043d\u0438\u0436\u043d\u0435\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435 (\u0443\u0434\u043e\u0431\u043d\u0435\u0435 \u0438\u0441\u043a\u0430\u0442\u044c). \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c Content-Length: N , \u0434\u043e\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0435\u0449\u0451 N \u0431\u0430\u0439\u0442 \u0434\u043b\u044f \u0442\u0435\u043b\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. 3) \u041a\u0430\u043a \u043f\u0430\u0440\u0441\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b (POST) \u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0448\u043b\u0451\u0442 <form method=\"POST\"> \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 application/x-www-form-urlencoded , \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: discipline=%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0&grade=5 \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0442\u0435\u043b\u043e \u043a\u0430\u043a UTF-8 \u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0447\u0435\u0440\u0435\u0437 parse_qs , \u043f\u043e\u043b\u0443\u0447\u0430\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441\u043f\u0438\u0441\u043a\u043e\u0432: python {\"discipline\": [\"\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430\"], \"grade\": [\"5\"]} \u0411\u0435\u0440\u0451\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430, \u043f\u043e\u0434\u0440\u0435\u0437\u0430\u0435\u043c \u043f\u0440\u043e\u0431\u0435\u043b\u044b .strip() . \u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442/\u043f\u0443\u0441\u0442\u043e\u0435 \u2014 \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c. 4) \u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 grades_by_discipline: dict[str, list[str]] \u2014 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0432 \u043f\u0430\u043c\u044f\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438: python grades_by_discipline.setdefault(discipline, []).append(grade) \u042d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0439 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0446\u0435\u043d\u043a\u0443. 5) \u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0412 build_html_page() \u0441\u0442\u0440\u043e\u0438\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443: \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 = \u043e\u0434\u043d\u0430 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430 , \u0441\u043f\u0440\u0430\u0432\u0430 \u2014 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0435\u0451 \u043e\u0446\u0435\u043d\u043e\u043a, \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u044b\u0439 \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e. \u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u0442 \u2014 \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u00ab\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445\u00bb. \u0412\u044b\u0434\u0430\u0451\u043c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439, \u00ab\u0443\u0447\u0435\u0431\u043d\u044b\u0439\u00bb HTML (\u0431\u0435\u0437 \u043b\u0438\u0448\u043d\u0435\u0433\u043e \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f). 6) \u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 HTTP-\u043e\u0442\u0432\u0435\u0442\u0430 \u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u0432\u0440\u0443\u0447\u043d\u0443\u044e: \u0421\u0442\u0430\u0442\u0443\u0441 HTTP/1.1 200 OK (\u0438\u043b\u0438 404). \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438: Content-Type , Content-Length ( \u0432 \u0431\u0430\u0439\u0442\u0430\u0445 ), Connection: close . \u041f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \\r\\n\\r\\n . \u0422\u0435\u043b\u043e (HTML). \u041f\u043e\u0447\u0435\u043c\u0443 Content-Length \u0432 \u0431\u0430\u0439\u0442\u0430\u0445: HTTP \u2014 \u0431\u0430\u0439\u0442\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b; UTF-8 \u0441\u0438\u043c\u0432\u043e\u043b \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 1 \u0431\u0430\u0439\u0442\u0430. 7) \u0416\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u0439 \u0446\u0438\u043a\u043b \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u0434\u0435\u043b\u0430\u0435\u0442 GET / \u2192 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u2192 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0448\u043b\u0451\u0442 POST /add \u0441 \u0442\u0435\u043b\u043e\u043c. \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0430\u0440\u0441\u0438\u0442 \u0442\u0435\u043b\u043e, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c, \u0441\u043d\u043e\u0432\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 (\u0431\u0435\u0437 \u0440\u0435\u0434\u0438\u0440\u0435\u043a\u0442\u0430 \u2014 \u043f\u0440\u043e\u0449\u0435). 8) \u041f\u043e\u0447\u0435\u043c\u0443 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a Connection: close \u2014 \u043f\u043e\u0441\u043b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442. \u0422\u0430\u043a \u043f\u0440\u043e\u0449\u0435: \u00ab\u043e\u0434\u0438\u043d \u0437\u0430\u043f\u0440\u043e\u0441 \u2014 \u043e\u0434\u0438\u043d \u043e\u0442\u0432\u0435\u0442\u00bb. \u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u0441\u0430\u043c \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435. \u041a\u0430\u043a \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440: bash python grades_server.py \u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435: http://127.0.0.1:8083/ \u0417\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0444\u043e\u0440\u043c\u0443: \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430 \u0438 \u043e\u0446\u0435\u043d\u043a\u0430 \u2192 \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c . \u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u043e\u0439 \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u0435\u0451 \u043e\u0446\u0435\u043d\u043e\u043a. \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0442\u0443 \u0436\u0435 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0443 \u0435\u0449\u0451 \u0440\u0430\u0437 \u2014 \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043e\u043a \u0432 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5: \u0412\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 (GET/POST)"},{"location":"task5/#5","text":"\u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e socket \u0432 Python. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: - \u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d: - \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 (\u0432 \u043f\u0430\u043c\u044f\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430). - \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b (\u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 \u043d\u0430 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u043e\u0446\u0435\u043d\u043e\u043a). - \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b: TCP (HTTP \u043f\u043e\u0432\u0435\u0440\u0445 TCP).","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5"},{"location":"task5/#_1","text":"","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"task5/#_2","text":"import socket from urllib.parse import parse_qs SERVER_HOST = \"127.0.0.1\" SERVER_PORT = 8083 # \u041f\u0430\u043c\u044f\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u0430: \"\u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\" -> \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u043e\u043a grades_by_discipline = {} # \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: {\"\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430\": [\"5\", \"4\"]} def build_html_page(): table_rows = [] if grades_by_discipline: for discipline, grades_list in grades_by_discipline.items(): grades_text = \", \".join(grades_list) if grades_list else \"\u2014\" table_rows.append(f\"<tr><td>{discipline}</td><td>{grades_text}</td></tr>\") else: table_rows.append(\"<tr><td colspan='2'>\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445</td></tr>\") html = \"\"\"<!DOCTYPE html> <html lang=\"ru\"> <meta charset=\"UTF-8\"> <title>\u0416\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a</title> <h1>\u0416\u0443\u0440\u043d\u0430\u043b \u043e\u0446\u0435\u043d\u043e\u043a</h1> <form action=\"/add\" method=\"POST\"> <div> <label>\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430: <input type=\"text\" name=\"discipline\"></label> </div> <div> <label>\u041e\u0446\u0435\u043d\u043a\u0430: <input type=\"text\" name=\"grade\"></label> </div> <div> <button type=\"submit\">\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c</button> </div> </form> <table border=\"1\" cellpadding=\"6\" cellspacing=\"0\"> <thead> <tr><th>\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430</th><th>\u041e\u0446\u0435\u043d\u043a\u0438</th></tr> </thead> <tbody> {rows} </tbody> </table> \"\"\".format(rows=''.join(table_rows)) return html def read_http_request(client_socket): data = b\"\" while b\"\\r\\n\\r\\n\" not in data: chunk = client_socket.recv(4096) if not chunk: break data += chunk header_part, _, body_rest = data.partition(b\"\\r\\n\\r\\n\") header_text = header_part.decode(\"iso-8859-1\", errors=\"ignore\") lines = header_text.split(\"\\r\\n\") request_line = lines[0] if lines else \"\" try: method, path, version = request_line.split(\" \") except ValueError: method, path, version = \"\", \"\", \"\" headers = {} for line in lines[1:]: if \":\" in line: k, v = line.split(\":\", 1) headers[k.strip().lower()] = v.strip() content_length = int(headers.get(\"content-length\", \"0\") or \"0\") body = body_rest while len(body) < content_length: chunk = client_socket.recv(4096) if not chunk: break body += chunk return method, path, version, headers, body def build_http_response(status_code, body_text, content_type=\"text/html; charset=UTF-8\"): if status_code == 200: status_line = \"HTTP/1.1 200 OK\" elif status_code == 404: status_line = \"HTTP/1.1 404 Not Found\" else: status_line = f\"HTTP/1.1 {status_code}\" body_bytes = body_text.encode(\"utf-8\") headers_lines = [ status_line, f\"Content-Type: {content_type}\", f\"Content-Length: {len(body_bytes)}\", \"Connection: close\", ] return (\"\\r\\n\".join(headers_lines) + \"\\r\\n\\r\\n\").encode(\"utf-8\") + body_bytes def handle_client(client_socket): try: method, path, version, headers, body = read_http_request(client_socket) if method == \"GET\" and path.startswith(\"/\"): page = build_html_page() client_socket.sendall(build_http_response(200, page)) return if method == \"POST\" and path == \"/add\": form_text = body.decode(\"utf-8\", errors=\"ignore\") form_data = parse_qs(form_text) discipline = (form_data.get(\"discipline\", [\"\"])[0] or \"\").strip() grade = (form_data.get(\"grade\", [\"\"])[0] or \"\").strip() if discipline and grade: grades_by_discipline.setdefault(discipline, []).append(grade) page = build_html_page() client_socket.sendall(build_http_response(200, page)) return not_found = \"<!doctype html><meta charset='utf-8'><h1>404 Not Found</h1>\" client_socket.sendall(build_http_response(404, not_found)) finally: try: client_socket.close() except Exception: pass def main(): server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) server_socket.bind((SERVER_HOST, SERVER_PORT)) server_socket.listen(5) print(f\"\u0416\u0443\u0440\u043d\u0430\u043b-HTTP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 http://{SERVER_HOST}:{SERVER_PORT}\") try: while True: client_socket, client_address = server_socket.accept() handle_client(client_socket) except KeyboardInterrupt: print(\"\\n\u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\") finally: server_socket.close() if __name__ == \"__main__\": main()","title":"\u0421\u0435\u0440\u0432\u0435\u0440"},{"location":"task5/#_3","text":"","title":"\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0435 \u043f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435"},{"location":"task5/#1","text":"\u041c\u044b \u043f\u0438\u0448\u0435\u043c \u043c\u0438\u043a\u0440\u043e-HTTP-\u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430 \u0447\u0438\u0441\u0442\u044b\u0445 \u0441\u043e\u043a\u0435\u0442\u0430\u0445: \u0447\u0438\u0442\u0430\u0435\u043c \u0442\u0435\u043a\u0441\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043f\u0430\u0440\u0441\u0438\u043c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443, \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438, \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0442\u0435\u043b\u043e. \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c \u0434\u0432\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0430 : GET / \u2014 \u043e\u0442\u0434\u0430\u0442\u044c HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 \u043e\u0446\u0435\u043d\u043e\u043a. POST /add \u2014 \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u043f\u043e\u043b\u044f discipline \u0438 grade , \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u0445 \u0432 \u043f\u0430\u043c\u044f\u0442\u044c, \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043e\u0431\u043d\u043e\u0432\u043b\u0451\u043d\u043d\u0443\u044e HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443.","title":"1) \u041e\u0431\u0449\u0430\u044f \u0438\u0434\u0435\u044f"},{"location":"task5/#2-http-","text":"TCP \u2014 \u043f\u043e\u0442\u043e\u043a \u0431\u0430\u0439\u0442. \u041c\u044b \u0447\u0438\u0442\u0430\u0435\u043c \u0438\u0437 \u0441\u043e\u043a\u0435\u0442\u0430 \u043f\u043e\u0440\u0446\u0438\u044f\u043c\u0438, \u043f\u043e\u043a\u0430 \u043d\u0435 \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u043c \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 \u0438 \u0442\u0435\u043b\u0430 : \\r\\n\\r\\n . \u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 (Request-Line) \u0432\u0438\u0434\u0430: GET / HTTP/1.1 \u2192 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u043c \u043d\u0430 method , path , version . \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u043a\u043b\u0430\u0434\u0451\u043c \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c headers \u0441 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u0432 \u043d\u0438\u0436\u043d\u0435\u043c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0435 (\u0443\u0434\u043e\u0431\u043d\u0435\u0435 \u0438\u0441\u043a\u0430\u0442\u044c). \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c Content-Length: N , \u0434\u043e\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0435\u0449\u0451 N \u0431\u0430\u0439\u0442 \u0434\u043b\u044f \u0442\u0435\u043b\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.","title":"2) \u041a\u0430\u043a \u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f HTTP-\u0437\u0430\u043f\u0440\u043e\u0441"},{"location":"task5/#3-post","text":"\u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0448\u043b\u0451\u0442 <form method=\"POST\"> \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 application/x-www-form-urlencoded , \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: discipline=%D0%9C%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B0&grade=5 \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0442\u0435\u043b\u043e \u043a\u0430\u043a UTF-8 \u0438 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0447\u0435\u0440\u0435\u0437 parse_qs , \u043f\u043e\u043b\u0443\u0447\u0430\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441\u043f\u0438\u0441\u043a\u043e\u0432: python {\"discipline\": [\"\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430\"], \"grade\": [\"5\"]} \u0411\u0435\u0440\u0451\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430, \u043f\u043e\u0434\u0440\u0435\u0437\u0430\u0435\u043c \u043f\u0440\u043e\u0431\u0435\u043b\u044b .strip() . \u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442/\u043f\u0443\u0441\u0442\u043e\u0435 \u2014 \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c.","title":"3) \u041a\u0430\u043a \u043f\u0430\u0440\u0441\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b (POST)"},{"location":"task5/#4","text":"grades_by_discipline: dict[str, list[str]] \u2014 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0432 \u043f\u0430\u043c\u044f\u0442\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438: python grades_by_discipline.setdefault(discipline, []).append(grade) \u042d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0439 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0446\u0435\u043d\u043a\u0443.","title":"4) \u0425\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"task5/#5-html-","text":"\u0412 build_html_page() \u0441\u0442\u0440\u043e\u0438\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443: \u043e\u0434\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 = \u043e\u0434\u043d\u0430 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430 , \u0441\u043f\u0440\u0430\u0432\u0430 \u2014 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0435\u0451 \u043e\u0446\u0435\u043d\u043e\u043a, \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u044b\u0439 \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e. \u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u0442 \u2014 \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043e\u0434\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u0443 \u00ab\u041d\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0445\u00bb. \u0412\u044b\u0434\u0430\u0451\u043c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439, \u00ab\u0443\u0447\u0435\u0431\u043d\u044b\u0439\u00bb HTML (\u0431\u0435\u0437 \u043b\u0438\u0448\u043d\u0435\u0433\u043e \u043e\u0444\u043e\u0440\u043c\u043b\u0435\u043d\u0438\u044f).","title":"5) \u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b"},{"location":"task5/#6-http-","text":"\u0421\u043e\u0431\u0438\u0440\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u0432\u0440\u0443\u0447\u043d\u0443\u044e: \u0421\u0442\u0430\u0442\u0443\u0441 HTTP/1.1 200 OK (\u0438\u043b\u0438 404). \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438: Content-Type , Content-Length ( \u0432 \u0431\u0430\u0439\u0442\u0430\u0445 ), Connection: close . \u041f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \\r\\n\\r\\n . \u0422\u0435\u043b\u043e (HTML). \u041f\u043e\u0447\u0435\u043c\u0443 Content-Length \u0432 \u0431\u0430\u0439\u0442\u0430\u0445: HTTP \u2014 \u0431\u0430\u0439\u0442\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b; UTF-8 \u0441\u0438\u043c\u0432\u043e\u043b \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 1 \u0431\u0430\u0439\u0442\u0430.","title":"6) \u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 HTTP-\u043e\u0442\u0432\u0435\u0442\u0430"},{"location":"task5/#7","text":"\u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u0434\u0435\u043b\u0430\u0435\u0442 GET / \u2192 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u2192 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0448\u043b\u0451\u0442 POST /add \u0441 \u0442\u0435\u043b\u043e\u043c. \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0430\u0440\u0441\u0438\u0442 \u0442\u0435\u043b\u043e, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0438\u0441\u044c, \u0441\u043d\u043e\u0432\u0430 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 (\u0431\u0435\u0437 \u0440\u0435\u0434\u0438\u0440\u0435\u043a\u0442\u0430 \u2014 \u043f\u0440\u043e\u0449\u0435).","title":"7) \u0416\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u0439 \u0446\u0438\u043a\u043b \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432"},{"location":"task5/#8","text":"\u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a Connection: close \u2014 \u043f\u043e\u0441\u043b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442. \u0422\u0430\u043a \u043f\u0440\u043e\u0449\u0435: \u00ab\u043e\u0434\u0438\u043d \u0437\u0430\u043f\u0440\u043e\u0441 \u2014 \u043e\u0434\u0438\u043d \u043e\u0442\u0432\u0435\u0442\u00bb. \u0411\u0440\u0430\u0443\u0437\u0435\u0440 \u0441\u0430\u043c \u0441\u043e\u0437\u0434\u0430\u0441\u0442 \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0435.","title":"8) \u041f\u043e\u0447\u0435\u043c\u0443 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435"},{"location":"task5/#_4","text":"\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440: bash python grades_server.py \u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435: http://127.0.0.1:8083/ \u0417\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0444\u043e\u0440\u043c\u0443: \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430 \u0438 \u043e\u0446\u0435\u043d\u043a\u0430 \u2192 \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c . \u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u043e\u0439 \u0438 \u0441\u043f\u0438\u0441\u043e\u043a \u0435\u0451 \u043e\u0446\u0435\u043d\u043e\u043a. \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0442\u0443 \u0436\u0435 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0443 \u0435\u0449\u0451 \u0440\u0430\u0437 \u2014 \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043e\u043a \u0432 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435.","title":"\u041a\u0430\u043a \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c"},{"location":"test/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u041a\u043b\u0438\u0435\u043d\u0442 import socket HOST = '127.0.0.1' PORT = 9090 # \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u0441\u043e\u043a\u0435\u0442 client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 message = 'Hello, server' client_socket.sendto(message.encode('utf-8'), (HOST, PORT)) # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 server_data, server_address = client_socket.recvfrom(1024) print(f'\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {server_data.decode('utf-8')}') # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 client_socket.close() \u0421\u0435\u0440\u0432\u0435\u0440 import socket HOST = '127.0.0.1' PORT = 9090 # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 server_socket.bind((HOST, PORT)) print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {HOST}:{PORT}\") while True: # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u0435\u0433\u043e \u0430\u0434\u0440\u0435\u0441 client_data, client_address = server_socket.recvfrom(1024) print(f'\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430: {client_data.decode('utf-8')}') # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 message = 'Hello, client' server_socket.sendto(message.encode('utf-8'), client_address) \u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u0421\u043e\u0437\u0434\u0430\u0451\u043c UDP \u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0430\u0434\u0440\u0435\u0441 127.0.0.1 \u0438 \u043f\u043e\u0440\u0442 9090 , \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0446\u0438\u043a\u043b\u0435 \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u0442\u044c \u0438\u0445, \u0430 \u0437\u0430\u0442\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 Hello, client \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041a\u043b\u0438\u0435\u043d\u0442 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 UDP \u0441\u043e\u043a\u0435\u0442 \u0438 \u0431\u0435\u0437 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 127.0.0.1:9090 . \u0417\u0430\u0442\u0435\u043c \u0447\u0438\u0442\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"test/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb, \u0438 \u043e\u043d\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"test/#_2","text":"","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"test/#_3","text":"import socket HOST = '127.0.0.1' PORT = 9090 # \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u0441\u043e\u043a\u0435\u0442 client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 message = 'Hello, server' client_socket.sendto(message.encode('utf-8'), (HOST, PORT)) # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 server_data, server_address = client_socket.recvfrom(1024) print(f'\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {server_data.decode('utf-8')}') # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 client_socket.close()","title":"\u041a\u043b\u0438\u0435\u043d\u0442"},{"location":"test/#_4","text":"import socket HOST = '127.0.0.1' PORT = 9090 # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 server_socket.bind((HOST, PORT)) print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 {HOST}:{PORT}\") while True: # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u0435\u0433\u043e \u0430\u0434\u0440\u0435\u0441 client_data, client_address = server_socket.recvfrom(1024) print(f'\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430: {client_data.decode('utf-8')}') # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 message = 'Hello, client' server_socket.sendto(message.encode('utf-8'), client_address)","title":"\u0421\u0435\u0440\u0432\u0435\u0440"},{"location":"test/#_5","text":"\u0421\u043e\u0437\u0434\u0430\u0451\u043c UDP \u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0430\u0434\u0440\u0435\u0441 127.0.0.1 \u0438 \u043f\u043e\u0440\u0442 9090 , \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0446\u0438\u043a\u043b\u0435 \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u0442\u044c \u0438\u0445, \u0430 \u0437\u0430\u0442\u0435\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 Hello, client \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041a\u043b\u0438\u0435\u043d\u0442 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 UDP \u0441\u043e\u043a\u0435\u0442 \u0438 \u0431\u0435\u0437 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 127.0.0.1:9090 . \u0417\u0430\u0442\u0435\u043c \u0447\u0438\u0442\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442.","title":"\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435"}]}